{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "edit-button-icon",
  "type": "registry:component",
  "title": "Edit Button Icon",
  "description": "A button that edits an item with an icon.",
  "registryDependencies": [
    "button",
    "http://localhost:3000/r/use-translation.json",
    "http://localhost:3000/r/button-tooltip-wrapper.json"
  ],
  "files": [
    {
      "path": "registry/new-york/components/edit-button-icon.tsx",
      "content": "import { Button, buttonVariants } from \"@/registry/new-york/ui/button\";\nimport { useTranslation } from \"@/registry/new-york/hooks/use-translation\";\nimport { VariantProps } from \"class-variance-authority\";\nimport { PencilIcon } from \"lucide-react\";\nimport { ButtonTooltipWrapper } from \"./button-tooltip-wrapper\";\n\nexport function EditButtonIcon({\n  variant = \"secondary\",\n  size = \"icon\",\n  icon = <PencilIcon className=\"w-4 h-4\" />,\n  tooltip,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    tooltip?: string;\n    icon?: React.ReactNode;\n  }) {\n  const t = useTranslation();\n\n  if (tooltip) {\n    return (\n      <ButtonTooltipWrapper title={tooltip}>\n        <Button variant={variant} size={size} {...props}>\n          {icon}\n        </Button>\n      </ButtonTooltipWrapper>\n    );\n  }\n\n  return (\n    <Button variant={variant} size={size} {...props}>\n      {icon}\n    </Button>\n  );\n}\n",
      "type": "registry:component"
    }
  ],
  "meta": {
    "tags": [
      "button",
      "edit"
    ],
    "style": 2
  }
}